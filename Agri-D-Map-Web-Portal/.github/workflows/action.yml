# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
        env:
          REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }} 
          REACT_APP_AGROMONITORING_API_URL: ${{ secrets.REACT_APP_AGROMONITORING_API_URL }}
          REACT_APP_AGROMONITORING_API_KEY: ${{ secrets.REACT_APP_AGROMONITORING_API_KEY }}
          REACT_APP_MAPBOX_GL_ACCESS_TOKEN: ${{ secrets.REACT_APP_MAPBOX_GL_ACCESS_TOKEN }}
          REACT_APP_MAPBOX_GL_STYLE: ${{ secrets.REACT_APP_MAPBOX_GL_STYLE }} 
          REACT_APP_GEO_LOCATION_URL: ${{ secrets.REACT_APP_GEO_LOCATION_URL }} 
          REACT_APP_LOCATION_IQ_ACCESS_TOKEN: ${{ secrets.REACT_APP_LOCATION_IQ_ACCESS_TOKEN }} 
          REACT_APP_REACT_WEATHER_API_KEY: ${{ secrets.REACT_APP_REACT_WEATHER_API_KEY }} 
      - run: npm ci
      - run: CI=false npm run build --if-present

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-1
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./build s3://demo-app-agrivision
